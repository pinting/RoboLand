"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Map_1 = require("../Map");
const Coord_1 = require("../Coord");
const CellType_1 = require("../Element/Cell/CellType");
class Adapter {
    constructor(robot) {
        this.robot = robot;
        this.map = Map_1.Map.GetInstance();
    }
    move(dx, dy) {
        return this.robot.Move(new Coord_1.Coord(dx, dy)) ? 1 : 0;
    }
    test(dx, dy) {
        var cell = this.map.GetCell(this.robot.GetPosition().Difference(new Coord_1.Coord(dx, dy)));
        return cell != null && cell.GetType() == CellType_1.CellType.Ground ? 1 : 0;
    }
    attack() {
        var result = null;
        this.map.GetRobots().some(robot => {
            if (robot.GetPosition().GetDistance(this.robot.GetPosition()) == 1) {
                result = robot;
                return true;
            }
            return false;
        });
        return result != null && this.robot.Attack(result) ? 1 : 0;
    }
}
exports.Adapter = Adapter;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy93d3cvbGliL0ludGVycHJldGVyL0FkYXB0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnQ0FBNkI7QUFFN0Isb0NBQWlDO0FBQ2pDLHVEQUFvRDtBQUVwRDtJQUtJLFlBQVksS0FBYTtRQUVyQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsR0FBRyxHQUFHLFNBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNqQyxDQUFDO0lBT00sSUFBSSxDQUFDLEVBQVUsRUFBRSxFQUFVO1FBRTlCLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLGFBQUssQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFPTSxJQUFJLENBQUMsRUFBVSxFQUFFLEVBQVU7UUFFOUIsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxhQUFLLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVwRixNQUFNLENBQUMsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksbUJBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNyRSxDQUFDO0lBS00sTUFBTTtRQUVULElBQUksTUFBTSxHQUFXLElBQUksQ0FBQztRQUUxQixJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLO1lBRTNCLEVBQUUsQ0FBQSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUNsRSxDQUFDO2dCQUNHLE1BQU0sR0FBRyxLQUFLLENBQUM7Z0JBRWYsTUFBTSxDQUFDLElBQUksQ0FBQztZQUNoQixDQUFDO1lBRUQsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUNqQixDQUFDLENBQUMsQ0FBQztRQUVILE1BQU0sQ0FBQyxNQUFNLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDL0QsQ0FBQztDQUNKO0FBdERELDBCQXNEQyIsImZpbGUiOiJ3d3cvbGliL0ludGVycHJldGVyL0FkYXB0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNYXAgfSBmcm9tICcuLi9NYXAnO1xyXG5pbXBvcnQgeyBJUm9ib3QgfSBmcm9tIFwiLi4vRWxlbWVudC9Sb2JvdC9JUm9ib3RcIjtcclxuaW1wb3J0IHsgQ29vcmQgfSBmcm9tIFwiLi4vQ29vcmRcIjtcclxuaW1wb3J0IHsgQ2VsbFR5cGUgfSBmcm9tIFwiLi4vRWxlbWVudC9DZWxsL0NlbGxUeXBlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgQWRhcHRlclxyXG57XHJcbiAgICBwcml2YXRlIHJvYm90OiBJUm9ib3Q7XHJcbiAgICBwcml2YXRlIG1hcDogTWFwO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHJvYm90OiBJUm9ib3QpXHJcbiAgICB7XHJcbiAgICAgICAgdGhpcy5yb2JvdCA9IHJvYm90O1xyXG4gICAgICAgIHRoaXMubWFwID0gTWFwLkdldEluc3RhbmNlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBNb3ZlIHRvIHRoZSBnaXZlbiBkaXJlY3Rpb24uXHJcbiAgICAgKiBAcGFyYW0gZHhcclxuICAgICAqIEBwYXJhbSBkeVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgbW92ZShkeDogbnVtYmVyLCBkeTogbnVtYmVyKTogbnVtYmVyXHJcbiAgICB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucm9ib3QuTW92ZShuZXcgQ29vcmQoZHgsIGR5KSkgPyAxIDogMDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRlc3QgaWYgdGhlIGdpdmVuIGRpcmVjdGlvbiBpcyBzYWZlLlxyXG4gICAgICogQHBhcmFtIGR4XHJcbiAgICAgKiBAcGFyYW0gZHkgXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyB0ZXN0KGR4OiBudW1iZXIsIGR5OiBudW1iZXIpOiBudW1iZXJcclxuICAgIHtcclxuICAgICAgICB2YXIgY2VsbCA9IHRoaXMubWFwLkdldENlbGwodGhpcy5yb2JvdC5HZXRQb3NpdGlvbigpLkRpZmZlcmVuY2UobmV3IENvb3JkKGR4LCBkeSkpKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIGNlbGwgIT0gbnVsbCAmJiBjZWxsLkdldFR5cGUoKSA9PSBDZWxsVHlwZS5Hcm91bmQgPyAxIDogMDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRyeSB0byBhdHRhY2sgc29tZW9uZSBhcm91bmQgdGhlIHBsYXllci5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGF0dGFjaygpOiBudW1iZXJcclxuICAgIHtcclxuICAgICAgICB2YXIgcmVzdWx0OiBJUm9ib3QgPSBudWxsO1xyXG5cclxuICAgICAgICB0aGlzLm1hcC5HZXRSb2JvdHMoKS5zb21lKHJvYm90ID0+IFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWYocm9ib3QuR2V0UG9zaXRpb24oKS5HZXREaXN0YW5jZSh0aGlzLnJvYm90LkdldFBvc2l0aW9uKCkpID09IDEpIFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICByZXN1bHQgPSByb2JvdDtcclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICByZXR1cm4gcmVzdWx0ICE9IG51bGwgJiYgdGhpcy5yb2JvdC5BdHRhY2socmVzdWx0KSA/IDEgOiAwO1xyXG4gICAgfVxyXG59Il19
